<!--
  Copyright 2016 The Cartographer Authors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<launch>
  <param name="/use_sim_time" value="false" />
	<include file="$(find unitree_lidar_ros)/launch/run_without_rviz.launch" />
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/unilidar/cloud"/>
        <!-- <remap from="scan" to="depth/scan_filtered"/> -->
        <rosparam>
            target_frame: unilidar_lidar # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -0.3
            max_height: 0.8

            angle_min: -3.14 # -M_PI
            angle_max: 3.14 # M_PI
            angle_increment: 0.0087 # M_PI/360.0
            scan_time: 0.3333
            range_min: 0.2
            range_max: 100
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 0
        </rosparam>

    </node>


  <node name="cartographer_node" pkg="cartographer_ros"
      type="cartographer_node" args="
          -configuration_directory $(find l1_mapping)/config
          -configuration_basename l1.lua"
      output="log">
    <!-- <remap from="scan" to="horizontal_laser_2d" /> -->
    <remap from="imu" to="/unilidar/imu" />

  </node>
	<node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0 0 0 0 0 0 /unilidar_lidar /base_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="lidar_tf_broadcaster" args="0 0 0 0 0 0 /unilidar_lidar /unilidar_imu 100" />


  <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
      type="cartographer_occupancy_grid_node" args="-resolution 0.05" />
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	<rosparam file="$(find l1_mapping)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
		<rosparam file="$(find l1_mapping)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find l1_mapping)/config/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find l1_mapping)/config/global_costmap_params.yaml" command="load" /> 
		<rosparam file="$(find l1_mapping)/config/base_local_planner_params.yaml" command="load" />
	</node>

  <node name="rviz" pkg="rviz" type="rviz" required="true"
      args="-d $(find l1_mapping)/config/demo_2d_movebase.rviz" />
</launch>
